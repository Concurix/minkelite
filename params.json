{
  "name": "Minkelite",
  "tagline": "",
  "body": "# minkelite\r\n\r\nThe Database and Statistical Model for Time-series Data Analytics\r\n\r\n# HTTP API\r\n\r\n## PARAMETERS\r\n\r\n- `act` : account key specified by the user in the config option set at init time of\r\ntracer such as \"wfp:helloworld\".  It is used in the URL when the user goes to\r\nthe dashboard like: http://localhost:8103/dash/wfp:helloworld\r\n- `host` : host name such as Demo.local in\r\nhttp://localhost:8103/dash/wfp:helloworld/Demo.local/9366\r\n- `pid` : process ID such as 9366 in\r\nhttp://localhost:8103/dash/wfp:helloworld/Demo.local/9366\r\n- `pfkey` : profile key which is unique identifier of trace file.  Trace file is\r\nself contained and generated one per arechiveInterval per host per process.\r\nSee the example /get_raw_pieces below.\r\n- `version` : (for post_raw_pieces only) Tracer version string such as 1.2.12 \r\nthree numbers separated by a period.\r\n\r\n## COMMANDS\r\n###`/get_host_pid_list/:act`\r\n**usage**: create the pulldown menu of HOST and PID shown at top right corner of\r\n\tthe dashboard.  Returns a list of all host names and pids per host for\r\n\tthe specific act\r\n\r\n\r\n**arguments**: act\r\n\r\n\r\n**example**: http://localhost:8103/get_host_pid_list/wfp:helloworld\r\n\r\n###`/get_meta_transactions/:act/:host/:pid`\r\n**usage**: get a list of all transactions for specific act, host, pid  It is used\r\n\twhen the dashboard first displays the transaction history.  The input\r\n\r\n\r\n**arguments**: act, host, and pid are returned by get_host_pid_list\r\n\r\n\r\n**example**: http://localhost:8103/get_meta_transactions/wfp:helloworld/\r\n\tDemo.local/3603\r\n\r\n###`/get_transaction/:act/:transaction/:host/:pid`\r\n**usage**: get a series of data and pfkey for the specific transaction,act,host,pid\r\n\r\n\r\n**example**: http://localhost:8103/get_transaction/wfp:helloworld/\r\n\tserve%20GET%20%2Fghost/Demo.local/3603\r\n\r\n###`/get_raw_memory_pieces/:act/:host/:pid`\r\n**usage**: get a series of process heap total, heap used, rss, loadaverage, uptime\r\n\tand pfkey for the specific act, host, pid  Used to draw the first two line\r\n\tcharts\r\n\r\n\r\n**example**: http://localhost:8103/get_raw_memory_pieces/wfp:helloworld/\r\n\tDemo.local/3603\r\n\r\n###`/get_raw_pieces/:pfkey`\r\n**usage**: retrieve the trace file of specific host and pid at specific time  Used\r\n\tto draw flame graph and waterfall views\r\n\r\n\r\n**example**: http://localhosts:8103/get_raw_pieces/\r\n\tf7e15f59f8c3d22115685dd90f56446a%7Cdb0fe07ce9c69159abccf7d79deb2c13\r\n\r\n###`/post_raw_pieces/:version`\r\n**usage**: post gzipped trace JSON file to minkelite request.body should be the\r\n\tgzipped trace\r\n\r\n\r\n**example**: http://cxlite.concurix.com:8103/post_raw_pieces/1.1.12\r\n\r\n\r\n# JS API\r\n### ml.getHostPidList(act, callback)\r\nGets a list of hosts and process IDs of the account\r\n- `act` {String} same as HTTP API parameter: act\r\n- `callback` {Function} Calleld with an object\r\n\r\n### ml.getMetaTransactions(act, host, pid, callback)\r\nGets data to visualize the list of transactions on the transaction\r\n- `act` {String} same as HTTP API parameter: act\r\n- `host` {String} same as HTTP API parameter: host\r\n- `pid` {Integer} same as HTTP API parameter: pid\r\n- `callback` {Function} Called with an object and a callback function which must\r\n\tbe called with the returned object for cleanup\r\n\r\n### ml.getTransaction(act, tran, host, pid, callback)\r\nReturns data to visualize the historical chart of the specific\r\n\ttransaction\r\n- `act` {String} same as HTTP API parameter: act\r\n- `tran` {String} typically one of the transactions acquired by getMetaTransactions\r\n- `host` {String} same as HTTP API parameter: host\r\n- `pid` {Integer} same as HTTP API parameter: pid\r\n- `callback` {Function} Called with an object\r\n\r\n### ml.getRawMemoryPieces(act, host, pid, callback)\r\nGets data to visualize the timeline view on the dashboard\r\n- `act` {String} same as HTTP API parameter: act\r\n- `host` {String} same as HTTP API parameter: host\r\n- `pid` {Integer} same as HTTP API parameter: pid\r\n- `callback` {Function} Called with an object\r\n\r\n### ml.getRawPieces(pfkey, uncompress, callback)\r\nGets a trace file JSON as a string\r\n- `pfkey` {String}\r\n- `uncompress` {Boolean} true if client wants\r\n- `callback` {Function} Calleld with string of trace JSON\r\n\r\n### ml.postRawPieces(version, act, trace, callback)\r\nPuts trace data to MinkeLite DB and returns {Boolean} where true = the post request succeeded\r\n- `version` {String} tracer version such as \"1.2.2\"\r\n- `act` {String} same as HTTP API parameter: act\r\n- `trace` {Object} trace JSON object\r\n- `callback` {Function} Calleld with {Boolean} where false = the post request succeeded\r\n\r\n### ml.getExpressApp()\r\nReturns an Express app of the MinkeLite instance.  Clients should start it.\r\n\r\n### ml.startServer()\r\nStarts the Express app of the MinkeLite instance\r\n\r\n### ml.shutdown(callback)\r\nShutdown the handles created for the MinkeLite instance\r\n- `callback` {Function} Called with error\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}